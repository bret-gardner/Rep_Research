install.packages("swirl")
library("swirl")
swirl()
bye()
setwd("~/GitHub/Rep_Research/PA2")
debugSource('~/GitHub/Rep_Research/PA2/PA2.R', echo=TRUE)
StormData <- read.csv('repdata-data-StormData.csv.bz2')
StormDataB <- StormData
#Convert to Date format:
StormDataB$BGN_DATE <- as.Date(as.character(StormDataB$BGN_DATE),
"%m/%d/%Y %H:%M:%S")
StormDataB <- subset(StormDataB, select=c("EVTYPE",
"BGN_DATE",
"FATALITIES",
"INJURIES",
"PROPDMG",
"PROPDMGEXP",
"CROPDMG",
"CROPDMGEXP",
"REFNUM"))
#Limit to data collected beginning in 1996 (more complete)
StormDataSmall <- StormDataB[StormDataB$BGN_DATE >= "2004-01-01"
& StormDataB$BGN_DATE <= "2008-01-01",]
#Interpret crop/propdmgexp letter values as multipliers
StormDataSmall$PropDmgNum <- 0
StormDataSmall[StormDataSmall$PROPDMGEXP == "K", ][, "PropDmgNum"] <- 10^3
StormDataSmall[StormDataSmall$PROPDMGEXP == "M", ][, "PropDmgNum"] <- 10^6
StormDataSmall[StormDataSmall$PROPDMGEXP == "B", ][, "PropDmgNum"] <- 10^9
StormDataSmall$CropDmgNum <- 0
StormDataSmall[StormDataSmall$CROPDMGEXP == "K", ][, "CropDmgNum"] <- 10^3
StormDataSmall[StormDataSmall$CROPDMGEXP == "M", ][, "CropDmgNum"] <- 10^6
StormDataSmall[StormDataSmall$CROPDMGEXP == "B", ][, "CropDmgNum"] <- 10^9
StormDataSmall$EVTYPE <- as.character(StormDataSmall$EVTYPE)
#Calculate total damage costs (Sum of Prop and Crop damage)
StormDataSmall$TotalDmg<- ((StormDataSmall$PropDmgNum * StormDataSmall$PROPDMG)
+ (StormDataSmall$CropDmgNum * StormDataSmall$CROPDMG))
AvgFatalities <- aggregate(FATALITIES ~ EVTYPE, data = StormDataSmall, FUN = mean)
AvgInjuries <- aggregate(INJURIES ~ EVTYPE, data = StormDataSmall, FUN = mean)
AvgCost <- aggregate(TotalDmg ~ EVTYPE, data = StormDataSmall, FUN = mean)
AvgCost <- AvgCost[order(-AvgCost$TotalDmg)]
AvgCostSmall <- AvgCost[1:10,]
#Combine fatalities and injuries
HealthCost <- merge(AvgFatalities,AvgInjuries, by = "EVTYPE")
HealthCost$FatInj <- (HealthCost$FATALITIES + HealthCost$INJURIES)
#Order data
HealthCost <- HealthCost[order(-HealthCost$FatInj),]
HealthCostSmall <- HealthCost[1:10,]
#Create Bar Plots
par(mfrow = c(1,2), cex = 0.8, fg = "yellow", mar = c(6, 4, 2,0), oma = c(0,0,2,0) )
barplot(HealthCostSmall$FATALITIES, names.arg = HealthCostSmall$EVTYPE,
las = 3, ylab = "Fatalities", main = "Fatalities", col = "black")
barplot(HealthCostSmall$INJURIES, names.arg = HealthCostSmall$EVTYPE,
las = 3, main = "Injuries", col = "red")
mtext("Storm Effects on Human Health", outer = TRUE, col = "black", cex = 2)
barplot(AvgCostSmall$TotalDmg, names.arg = AvgCostSmall$EVTYPE,
las = 3, ylab = "Cost", main = "Cost", col = "black")
mtext("Storm Effects on Property and Crop Damage", outer = TRUE, col = "black", cex = 2)
AvgCost <- aggregate(TotalDmg ~ EVTYPE, data = StormDataSmall, FUN = mean)
AvgCostSmall <- AvgCost[order(-AvgCost$TotalDmg)]
AvgCostSmall <- AvgCost[1:10,]
AvgCost <- aggregate(TotalDmg ~ EVTYPE, data = StormDataSmall, FUN = mean)
AvgCostSmall <- AvgCost[order(-AvgCost$TotalDmg)]
AvgCostSmall <- AvgCost[order(-AvgCost$TotalDmg)]
