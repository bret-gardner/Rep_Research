getwd()
getwd()
getwd()
find.package("devtools")
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
library(devtools)
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
cube <- function(x,n){
x^3
}
cube(3)
x<-1:10
if(x>5){}
f<-function(x){
g<-function(y){
y+z
}
z <-4
x+g(x)
}
z<-10
f(3)
debug(ls)
ls
ls()
undebug(ls)
ls9)
ls9)
ls()
x <- matrix(2,2,4)
x
solve(x)
x<-matrix(2,2)
x
x(rnorm(4),2,2)
x<-(rnorm(4),2,2)
x(2,2,2)
x<-matrix(rnorm(4),2,2)
x
solve9x
solve(x)
source('~/.active-rstudio-document', echo=TRUE)
cachemean(c(27,23))
makeVector()
makeVector()
cachemean(c(27,23))
cachemean(x)
source('C:/Users/Bret&Jessica/data_scientist_specialization/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
makeCacheMatrix
cacheSolve(x)
cacheSolve()
x<- matrix(rnorm(4),2,2)
x
cacheSolve(x)
?cache
?<<-
?(cachemean)
?cachemean
source('C:/Users/Bret&Jessica/data_scientist_specialization/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
cacheSolve(x)
x
solve(x)
x$solve
x$solve()
source('C:/Users/Bret&Jessica/data_scientist_specialization/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
makeCacheMatrix
makeCacheMatrix()
list
t <-makeCacheMatrix()
t
t <- makeVector()
t
t <- makeVector(c(1,4,5)
t
t <- makeVector(c(1,4,5))
t
cachemean(t)
cachemean(t)
x
makeCacheMatrix(x)
w <- makeCacheMatrix(x)
w
cacheSolve(w)
cacheSolve(x)
source('C:/Users/Bret&Jessica/data_scientist_specialization/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
x <- matrix(1:4,2,2)
x
cacheSolve(x)
w <- makeCacheMatrix(x)
w
cacheSolve(w)
z <- cacheSolve(w)
source('C:/Users/Bret&Jessica/data_scientist_specialization/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
z <- cacheSolve(w)
z <- cacheSolve(w)
source('C:/Users/Bret&Jessica/data_scientist_specialization/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
z <- cacheSolve(w)
source('C:/Users/Bret&Jessica/data_scientist_specialization/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
z <- cacheSolve(w)
w<-makeCacheMatrix(x)
z <- cacheSolve(w)
z
w<-makeCacheMatrix(z)
z <- cacheSolve(w)
z
z <- cacheSolve(w)
z
source('C:/Users/Bret&Jessica/data_scientist_specialization/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
z <- cacheSolve(w)
z
source('C:/Users/Bret&Jessica/data_scientist_specialization/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
ls()
x
w
v
ls()
t
print(t)
ls()
cachemean(x)
library(dataset)
library("dataset")
dataset
airquality
colnames(airquality)
x <- airquality
?mapply
y <- mapply(mean, split(x))
?split
split(x,Month)
split(x,"Month")
?colmeans
?colmean
?colMean
?colMeans
z <- mapply(colMeans,split(x,"Month"))
z
z
x
x[1,na.rm=T]
x[1]
x[,2]
x[head]
head(x)
mean(x[1])
mean(x[,2])
mean(x[,1])
mean(x[,3])
mean(x[,4])
mean(x[,5])
mean(x[5])
sapply(x,colMeans,na.rm=TRUE)
?sapply
class(x)
sapply(x,colMeans,na.rm=TRUE)
?colMeans
y <- sapply(x[,3],colMeans,na.rm=TRUE)
colnames(x)
table(x)
tapply(colMeans,x)
x
nrow(x)
colnames(x)
x$Ozone
y <- x$Oz
class(y)
y
is.na(y)
mean(y,na.rm=TRUE)
x
min(y)
min(y,na.rm=TRUE)
max(y)
y
max(y,na.rm=TRUE)
q(y)
address <- "https://www.amia.org/education/programs-and-courses?field_state_value=Iowa&term_node_tid_depth=All"
data <- url(address)
q <- readLines(data,15)
q
q <- readLines(data,16:30)
q
q <- readLines(data,160)
q
q <- readLines(data,"Iowa")
q <- readLines(data,contains("Iowa"))
?readLines
q <- readLines(data,n = -1)
q
url <- "https://s3.amazonaws.com/coursera-uploads/user-74628582dfeef2c2be706958/973502/asst-3/4c5b6e70185711e5b4f6878c9913060c.txt"
download.file(url,"student1.txt")
x <- read.table("student1.txt")
dim(x)
x[,1]
str(x)
url <- "https://s3.amazonaws.com/coursera-uploads/user-4726c3c5b8b039dff1ceb013/973502/asst-3/f595d6c0185611e5a79951d593ccbccc.txt"
x <- read.table("student1.txt")
dim(x)
str(x)
x <- read.table("student1.txt", header=TRUE)
str(x)
dim(x)
url <- "https://s3.amazonaws.com/coursera-uploads/user-b63056d319d8ac78b09de4bf/973502/asst-3/21ca8940185011e5aaf6f51a37ac2dba.txt"
x <- read.table("student1.txt", header=TRUE)
dim(x)
str(x)
dim(x)
source('~/checker.R', echo=TRUE)
source('~/checker.R', echo=TRUE)
source('~/checker.R', echo=TRUE)
source('~/checker.R', echo=TRUE)
getwd()
session()
ls()
dir()
packages <- c('redcapAPI','REDCapR', 'data.table','dplyr')
for(package in packages){
if(package %in% rownames(installed.packages()) == FALSE){
install.packages(package)
}
}
require("dplyr")
require('data.table')
require("redcapAPI")
require("REDCapR")
library(rmarkdown)
install.packages(rmarkdown)
setwd("C:/Users/Bret&Jessica/Desktop/PA2")
dir()
unzip("rmarkdown_0.9.2.tar.gz")
?unzip
dir(0)
dir9)
dir()
rmarkdown_0.9.2.tar.gz
setwd("~/GitHub/Rep_Research/PA2")
```{r}
packages <- c('dplyr','data.table')
for(package in packages){
if(package %in% rownames(installed.packages()) == FALSE){
install.packages(package)
}
}
require("dplyr")
require('data.table')
```
```{r}
if(!file.exists('repdata-data-StormData.csv.bz2')){
URL <- "https://github.com/bret-gardner/Rep_Research/blob/master/PA2/repdata-data-StormData.csv.bz2"
download.file(URL,"repdata-data-StormData.csv.bz2")
}
```
dir()
unzip("repdata-data-StormData.csv.bz2")
x <- read.csv("repdata-data-StormData.csv.bz2")
